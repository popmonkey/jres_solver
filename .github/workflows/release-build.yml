name: Build and Release Executables

on:
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out the repository code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executables (Unix)
        if: runner.os != 'Windows'
        run: |
          # Build the solver executable
          pyinstaller \
            --name solver \
            --add-data "$(python -c 'import pulp; print(pulp.__path__[0])'):pulp" \
            --hidden-import="pulp.apis.PULP_CBC_CMD" \
            --hidden-import="uuid" \
            solver.py
          
          # Build the formatter executable
          pyinstaller \
            --name formatter \
            --hidden-import="pandas" \
            --hidden-import="openpyxl" \
            formatter.py

      - name: Build executables (Windows)
        if: runner.os == 'Windows'
        run: |
          # Build the solver executable
          pyinstaller `
            --name solver `
            --add-data "(python -c 'import pulp; print(pulp.__path__[0])'):pulp" `
            --hidden-import="pulp.apis.PULP_CBC_CMD" `
            --hidden-import="uuid" `
            solver.py
          
          # Build the formatter executable
          pyinstaller `
            --name formatter `
            --hidden-import="pandas" `
            --hidden-import="openpyxl" `
            formatter.py

      - name: Package the application bundle (Unix)
        if: runner.os != 'Windows'
        run: |
          tar -czvf executables-${{ matrix.os }}.tar.gz -C dist/ .

      - name: Package the application bundle (Windows)
        if: runner.os == 'Windows'
        run: |
          Compress-Archive -Path dist/* -DestinationPath executables-${{ matrix.os }}.zip

      - name: Upload artifacts to the release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            executables-*.tar.gz
            executables-*.zip
